name: Build and package web game

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request_target:
    branches: [ recette, main ]

env:
  AZURE_WEBAPP_NAME: 'globomantics-web-game'   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '9.0'
  GLOBOMANTICS_TAG: '0.1.0'           

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Repository cloned to ${{ runner.name }}
      run: echo "The ${{ github.repository }} repository has been cloned to the runner."

    - name: Repository copied to Workspace on ${{ runner.name }}
      run: echo "Your repository has been copied to the path ${{ github.workspace }} on the runner."

    - name: Location of preinstalled tools on ${{ runner.name }}
      run: echo "The preinstalled tools are located here on the runner ${{ runner.tool_cache }}."

  analyse:
    needs: checks
    uses: ./.github/workflows/codeql-analysis.yml

  build:
    runs-on: ubuntu-latest
    needs: analyse

    steps:
      - name: 'Check out repository code'
        uses: actions/checkout@v4
      
      - name: 'Setup .NET Core'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 

      - name: 'Restore'
        run: dotnet restore '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln'

      - name: 'Build'
        run: dotnet build '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' --configuration Release --no-restore

  package:
    runs-on: ubuntu-latest
    needs: analyse

    steps:
      - name: 'Check out repository code'
        uses: actions/checkout@v4
      
      - name: 'Setup .NET Core'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      - name: 'Package'
        run: dotnet pack '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' --configuration Release --no-build --output .

  publish:
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: 'Check out repository code'
        uses: actions/checkout@v4
      
      - name: 'Setup .NET Core'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      - name: 'Publish'
        run: dotnet publish '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/app-package' 

  deploy:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      # Création des Releases par environnement
      - name: Create Draft develop
        id: create_draft_develop
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref == 'refs/heads/develop' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GLOBOMANTICS_TAG }}
          name: '${{ env.AZURE_WEBAPP_NAME }}-develop'
          draft: true
          prerelease: false
          body: "Release Note branche ${{ github.ref }} en mode draft, déclencheur par ${{ github.actor }} sur une action ${{ github.event_name }}, commit SHA ${{ github.sha }}"
      - name: Create PreRelease recette
        id: create_prerelease_recette
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref == 'refs/heads/recette' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GLOBOMANTICS_TAG }}
          name: '${{ env.AZURE_WEBAPP_NAME }}-recette'
          draft: false
          prerelease: true
          body: "Release Note branche ${{ github.ref }} en mode prerelease, déclencheur par ${{ github.actor }} sur une action ${{ github.event_name }}, commit SHA ${{ github.sha }}"
      - name: Create Release production
        id: create_release_production
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GLOBOMANTICS_TAG }}
          name: '${{ env.AZURE_WEBAPP_NAME }}-production'
          draft: false
          prerelease: false
          make_latest: true
          body: "Release Note branche ${{ github.ref }} en mode make_latest, déclencheur par ${{ github.actor }} sur une action ${{ github.event_name }}, commit SHA ${{ github.sha }}"